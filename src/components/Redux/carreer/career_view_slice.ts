// career_view_slice.ts
import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { fetchCareerById, CareerDetail, CareerViewResponse } from "./career_view_thunk"; // Import types and thunk

// Interface for the overall career view state
interface CareerViewState {
  career: CareerDetail | null; // Stores the detailed career object
  loading: boolean;
  error: string | null;
  success: boolean;
}

// Initial state for the career view slice
const initialState: CareerViewState = {
  career: null,
  loading: false,
  error: null,
  success: false,
};

// Create the career view Redux slice
const careerViewSlice = createSlice({
  name: "career_view", // Slice name
  initialState, // Initial state
  reducers: {
    // Reducer to reset the state to its initial values
    resetCareerViewState: () => initialState,
  },
  extraReducers: (builder) => {
    builder
      // Handle pending state of fetchCareerById thunk
      .addCase(fetchCareerById.pending, (state) => {
        state.loading = true; // Set loading to true
        state.error = null; // Clear any previous errors
        state.success = false; // Set success to false
      })
      // Handle fulfilled state of fetchCareerById thunk
      .addCase(
        fetchCareerById.fulfilled,
        (state, action: PayloadAction<CareerViewResponse>) => {
          state.loading = false; // Set loading to false
          state.success = action.payload.success; // Set success based on API response
          state.career = action.payload.career; // Store the detailed career object
        }
      )
      // Handle rejected state of fetchCareerById thunk
      .addCase(fetchCareerById.rejected, (state, action) => {
        state.loading = false; // Set loading to false
        // Set error message from payload or a default message
        state.error = action.payload?.message || "Failed to fetch career details";
        state.success = false; // Set success to false
      });
  },
});

// Export actions generated by createSlice
export const { resetCareerViewState } = careerViewSlice.actions;

// Export the reducer
export default careerViewSlice.reducer;

// Selector to easily access the career detail data from the Redux store
export const selectCareerDetail = (state: { getcareerview: CareerViewState }) =>
  state.getcareerview.career;
